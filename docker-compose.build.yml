version: '3'
services:
  # Service web
  web:
    # Image for docker HUB
    image: splyters/timemanager:web
    # Build file for server is in that folder
    build:
      context: server/
      dockerfile: Dockerfile
      args:
      - SECRET_KEY_BASE=$SECRET_KEY_BASE
      - DATABASE_URL=$DATABASE_URL
    ports:
      - 4000:4000
    
      # - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      # This service needs postgres service to be up.
    depends_on:
      - db

  # # Service client
  client:
    # Image for docker HUB
    image: splyters/timemanager:client
    # Build file for client is in that folder
    build:
      context: client/
      dockerfile: dockerfile
      args:
      - AWS_DNS_NAME=$AWS_DNS_NAME
    # Expose container port 80 to host port 80
    ports:
      - "80:80"
    depends_on:
      # For this service to work, servie web should be up.
      - web

  # Database service
  db:
    image: postgres
    # command: ["postgres", "-c", "config_file=/etc/postgresql.conf"]
    volumes:
      # Mount ./data fro host to /var/lib/postgresql/data in container
      - pgdata:/var/lib/postgresql/data
    # Environment variables to be passed to postgres
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
      PGDATA: /var/lib/postgresql/data/pgdata
    # Map 5432 port from container to port 5434 in host
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "q", "-U", "postgres" ]
      interval: 5s
      timeout: 10s
      retries: 10
volumes:
   pgdata: